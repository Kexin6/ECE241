--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=25 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_n2a
( 
	data[4..0]	:	input;
	eq[24..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[24..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1394w[2..0]	: WIRE;
	w_anode1408w[3..0]	: WIRE;
	w_anode1425w[3..0]	: WIRE;
	w_anode1435w[3..0]	: WIRE;
	w_anode1445w[3..0]	: WIRE;
	w_anode1455w[3..0]	: WIRE;
	w_anode1465w[3..0]	: WIRE;
	w_anode1475w[3..0]	: WIRE;
	w_anode1485w[3..0]	: WIRE;
	w_anode1497w[2..0]	: WIRE;
	w_anode1507w[3..0]	: WIRE;
	w_anode1518w[3..0]	: WIRE;
	w_anode1528w[3..0]	: WIRE;
	w_anode1538w[3..0]	: WIRE;
	w_anode1548w[3..0]	: WIRE;
	w_anode1558w[3..0]	: WIRE;
	w_anode1568w[3..0]	: WIRE;
	w_anode1578w[3..0]	: WIRE;
	w_anode1589w[2..0]	: WIRE;
	w_anode1599w[3..0]	: WIRE;
	w_anode1610w[3..0]	: WIRE;
	w_anode1620w[3..0]	: WIRE;
	w_anode1630w[3..0]	: WIRE;
	w_anode1640w[3..0]	: WIRE;
	w_anode1650w[3..0]	: WIRE;
	w_anode1660w[3..0]	: WIRE;
	w_anode1670w[3..0]	: WIRE;
	w_anode1681w[2..0]	: WIRE;
	w_anode1691w[3..0]	: WIRE;
	w_anode1702w[3..0]	: WIRE;
	w_anode1712w[3..0]	: WIRE;
	w_anode1722w[3..0]	: WIRE;
	w_anode1732w[3..0]	: WIRE;
	w_anode1742w[3..0]	: WIRE;
	w_anode1752w[3..0]	: WIRE;
	w_anode1762w[3..0]	: WIRE;
	w_data1392w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[24..0] = eq_wire[24..0];
	eq_wire[] = ( ( w_anode1762w[3..3], w_anode1752w[3..3], w_anode1742w[3..3], w_anode1732w[3..3], w_anode1722w[3..3], w_anode1712w[3..3], w_anode1702w[3..3], w_anode1691w[3..3]), ( w_anode1670w[3..3], w_anode1660w[3..3], w_anode1650w[3..3], w_anode1640w[3..3], w_anode1630w[3..3], w_anode1620w[3..3], w_anode1610w[3..3], w_anode1599w[3..3]), ( w_anode1578w[3..3], w_anode1568w[3..3], w_anode1558w[3..3], w_anode1548w[3..3], w_anode1538w[3..3], w_anode1528w[3..3], w_anode1518w[3..3], w_anode1507w[3..3]), ( w_anode1485w[3..3], w_anode1475w[3..3], w_anode1465w[3..3], w_anode1455w[3..3], w_anode1445w[3..3], w_anode1435w[3..3], w_anode1425w[3..3], w_anode1408w[3..3]));
	w_anode1394w[] = ( (w_anode1394w[1..1] & (! data_wire[4..4])), (w_anode1394w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1408w[] = ( (w_anode1408w[2..2] & (! w_data1392w[2..2])), (w_anode1408w[1..1] & (! w_data1392w[1..1])), (w_anode1408w[0..0] & (! w_data1392w[0..0])), w_anode1394w[2..2]);
	w_anode1425w[] = ( (w_anode1425w[2..2] & (! w_data1392w[2..2])), (w_anode1425w[1..1] & (! w_data1392w[1..1])), (w_anode1425w[0..0] & w_data1392w[0..0]), w_anode1394w[2..2]);
	w_anode1435w[] = ( (w_anode1435w[2..2] & (! w_data1392w[2..2])), (w_anode1435w[1..1] & w_data1392w[1..1]), (w_anode1435w[0..0] & (! w_data1392w[0..0])), w_anode1394w[2..2]);
	w_anode1445w[] = ( (w_anode1445w[2..2] & (! w_data1392w[2..2])), (w_anode1445w[1..1] & w_data1392w[1..1]), (w_anode1445w[0..0] & w_data1392w[0..0]), w_anode1394w[2..2]);
	w_anode1455w[] = ( (w_anode1455w[2..2] & w_data1392w[2..2]), (w_anode1455w[1..1] & (! w_data1392w[1..1])), (w_anode1455w[0..0] & (! w_data1392w[0..0])), w_anode1394w[2..2]);
	w_anode1465w[] = ( (w_anode1465w[2..2] & w_data1392w[2..2]), (w_anode1465w[1..1] & (! w_data1392w[1..1])), (w_anode1465w[0..0] & w_data1392w[0..0]), w_anode1394w[2..2]);
	w_anode1475w[] = ( (w_anode1475w[2..2] & w_data1392w[2..2]), (w_anode1475w[1..1] & w_data1392w[1..1]), (w_anode1475w[0..0] & (! w_data1392w[0..0])), w_anode1394w[2..2]);
	w_anode1485w[] = ( (w_anode1485w[2..2] & w_data1392w[2..2]), (w_anode1485w[1..1] & w_data1392w[1..1]), (w_anode1485w[0..0] & w_data1392w[0..0]), w_anode1394w[2..2]);
	w_anode1497w[] = ( (w_anode1497w[1..1] & (! data_wire[4..4])), (w_anode1497w[0..0] & data_wire[3..3]), B"1");
	w_anode1507w[] = ( (w_anode1507w[2..2] & (! w_data1392w[2..2])), (w_anode1507w[1..1] & (! w_data1392w[1..1])), (w_anode1507w[0..0] & (! w_data1392w[0..0])), w_anode1497w[2..2]);
	w_anode1518w[] = ( (w_anode1518w[2..2] & (! w_data1392w[2..2])), (w_anode1518w[1..1] & (! w_data1392w[1..1])), (w_anode1518w[0..0] & w_data1392w[0..0]), w_anode1497w[2..2]);
	w_anode1528w[] = ( (w_anode1528w[2..2] & (! w_data1392w[2..2])), (w_anode1528w[1..1] & w_data1392w[1..1]), (w_anode1528w[0..0] & (! w_data1392w[0..0])), w_anode1497w[2..2]);
	w_anode1538w[] = ( (w_anode1538w[2..2] & (! w_data1392w[2..2])), (w_anode1538w[1..1] & w_data1392w[1..1]), (w_anode1538w[0..0] & w_data1392w[0..0]), w_anode1497w[2..2]);
	w_anode1548w[] = ( (w_anode1548w[2..2] & w_data1392w[2..2]), (w_anode1548w[1..1] & (! w_data1392w[1..1])), (w_anode1548w[0..0] & (! w_data1392w[0..0])), w_anode1497w[2..2]);
	w_anode1558w[] = ( (w_anode1558w[2..2] & w_data1392w[2..2]), (w_anode1558w[1..1] & (! w_data1392w[1..1])), (w_anode1558w[0..0] & w_data1392w[0..0]), w_anode1497w[2..2]);
	w_anode1568w[] = ( (w_anode1568w[2..2] & w_data1392w[2..2]), (w_anode1568w[1..1] & w_data1392w[1..1]), (w_anode1568w[0..0] & (! w_data1392w[0..0])), w_anode1497w[2..2]);
	w_anode1578w[] = ( (w_anode1578w[2..2] & w_data1392w[2..2]), (w_anode1578w[1..1] & w_data1392w[1..1]), (w_anode1578w[0..0] & w_data1392w[0..0]), w_anode1497w[2..2]);
	w_anode1589w[] = ( (w_anode1589w[1..1] & data_wire[4..4]), (w_anode1589w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1599w[] = ( (w_anode1599w[2..2] & (! w_data1392w[2..2])), (w_anode1599w[1..1] & (! w_data1392w[1..1])), (w_anode1599w[0..0] & (! w_data1392w[0..0])), w_anode1589w[2..2]);
	w_anode1610w[] = ( (w_anode1610w[2..2] & (! w_data1392w[2..2])), (w_anode1610w[1..1] & (! w_data1392w[1..1])), (w_anode1610w[0..0] & w_data1392w[0..0]), w_anode1589w[2..2]);
	w_anode1620w[] = ( (w_anode1620w[2..2] & (! w_data1392w[2..2])), (w_anode1620w[1..1] & w_data1392w[1..1]), (w_anode1620w[0..0] & (! w_data1392w[0..0])), w_anode1589w[2..2]);
	w_anode1630w[] = ( (w_anode1630w[2..2] & (! w_data1392w[2..2])), (w_anode1630w[1..1] & w_data1392w[1..1]), (w_anode1630w[0..0] & w_data1392w[0..0]), w_anode1589w[2..2]);
	w_anode1640w[] = ( (w_anode1640w[2..2] & w_data1392w[2..2]), (w_anode1640w[1..1] & (! w_data1392w[1..1])), (w_anode1640w[0..0] & (! w_data1392w[0..0])), w_anode1589w[2..2]);
	w_anode1650w[] = ( (w_anode1650w[2..2] & w_data1392w[2..2]), (w_anode1650w[1..1] & (! w_data1392w[1..1])), (w_anode1650w[0..0] & w_data1392w[0..0]), w_anode1589w[2..2]);
	w_anode1660w[] = ( (w_anode1660w[2..2] & w_data1392w[2..2]), (w_anode1660w[1..1] & w_data1392w[1..1]), (w_anode1660w[0..0] & (! w_data1392w[0..0])), w_anode1589w[2..2]);
	w_anode1670w[] = ( (w_anode1670w[2..2] & w_data1392w[2..2]), (w_anode1670w[1..1] & w_data1392w[1..1]), (w_anode1670w[0..0] & w_data1392w[0..0]), w_anode1589w[2..2]);
	w_anode1681w[] = ( (w_anode1681w[1..1] & data_wire[4..4]), (w_anode1681w[0..0] & data_wire[3..3]), B"1");
	w_anode1691w[] = ( (w_anode1691w[2..2] & (! w_data1392w[2..2])), (w_anode1691w[1..1] & (! w_data1392w[1..1])), (w_anode1691w[0..0] & (! w_data1392w[0..0])), w_anode1681w[2..2]);
	w_anode1702w[] = ( (w_anode1702w[2..2] & (! w_data1392w[2..2])), (w_anode1702w[1..1] & (! w_data1392w[1..1])), (w_anode1702w[0..0] & w_data1392w[0..0]), w_anode1681w[2..2]);
	w_anode1712w[] = ( (w_anode1712w[2..2] & (! w_data1392w[2..2])), (w_anode1712w[1..1] & w_data1392w[1..1]), (w_anode1712w[0..0] & (! w_data1392w[0..0])), w_anode1681w[2..2]);
	w_anode1722w[] = ( (w_anode1722w[2..2] & (! w_data1392w[2..2])), (w_anode1722w[1..1] & w_data1392w[1..1]), (w_anode1722w[0..0] & w_data1392w[0..0]), w_anode1681w[2..2]);
	w_anode1732w[] = ( (w_anode1732w[2..2] & w_data1392w[2..2]), (w_anode1732w[1..1] & (! w_data1392w[1..1])), (w_anode1732w[0..0] & (! w_data1392w[0..0])), w_anode1681w[2..2]);
	w_anode1742w[] = ( (w_anode1742w[2..2] & w_data1392w[2..2]), (w_anode1742w[1..1] & (! w_data1392w[1..1])), (w_anode1742w[0..0] & w_data1392w[0..0]), w_anode1681w[2..2]);
	w_anode1752w[] = ( (w_anode1752w[2..2] & w_data1392w[2..2]), (w_anode1752w[1..1] & w_data1392w[1..1]), (w_anode1752w[0..0] & (! w_data1392w[0..0])), w_anode1681w[2..2]);
	w_anode1762w[] = ( (w_anode1762w[2..2] & w_data1392w[2..2]), (w_anode1762w[1..1] & w_data1392w[1..1]), (w_anode1762w[0..0] & w_data1392w[0..0]), w_anode1681w[2..2]);
	w_data1392w[2..0] = data_wire[2..0];
END;
--VALID FILE
