--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=23 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[22..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[22..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1006w[3..0]	: WIRE;
	w_anode1016w[3..0]	: WIRE;
	w_anode1026w[3..0]	: WIRE;
	w_anode1038w[2..0]	: WIRE;
	w_anode1047w[3..0]	: WIRE;
	w_anode1058w[3..0]	: WIRE;
	w_anode1068w[3..0]	: WIRE;
	w_anode1078w[3..0]	: WIRE;
	w_anode1088w[3..0]	: WIRE;
	w_anode1098w[3..0]	: WIRE;
	w_anode1108w[3..0]	: WIRE;
	w_anode1118w[3..0]	: WIRE;
	w_anode1129w[2..0]	: WIRE;
	w_anode1138w[3..0]	: WIRE;
	w_anode1149w[3..0]	: WIRE;
	w_anode1159w[3..0]	: WIRE;
	w_anode1169w[3..0]	: WIRE;
	w_anode1179w[3..0]	: WIRE;
	w_anode1189w[3..0]	: WIRE;
	w_anode1199w[3..0]	: WIRE;
	w_anode1209w[3..0]	: WIRE;
	w_anode1220w[2..0]	: WIRE;
	w_anode1229w[3..0]	: WIRE;
	w_anode1240w[3..0]	: WIRE;
	w_anode1250w[3..0]	: WIRE;
	w_anode1260w[3..0]	: WIRE;
	w_anode1270w[3..0]	: WIRE;
	w_anode1280w[3..0]	: WIRE;
	w_anode1290w[3..0]	: WIRE;
	w_anode1300w[3..0]	: WIRE;
	w_anode936w[2..0]	: WIRE;
	w_anode949w[3..0]	: WIRE;
	w_anode966w[3..0]	: WIRE;
	w_anode976w[3..0]	: WIRE;
	w_anode986w[3..0]	: WIRE;
	w_anode996w[3..0]	: WIRE;
	w_data934w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[22..0] = eq_wire[22..0];
	eq_wire[] = ( ( w_anode1300w[3..3], w_anode1290w[3..3], w_anode1280w[3..3], w_anode1270w[3..3], w_anode1260w[3..3], w_anode1250w[3..3], w_anode1240w[3..3], w_anode1229w[3..3]), ( w_anode1209w[3..3], w_anode1199w[3..3], w_anode1189w[3..3], w_anode1179w[3..3], w_anode1169w[3..3], w_anode1159w[3..3], w_anode1149w[3..3], w_anode1138w[3..3]), ( w_anode1118w[3..3], w_anode1108w[3..3], w_anode1098w[3..3], w_anode1088w[3..3], w_anode1078w[3..3], w_anode1068w[3..3], w_anode1058w[3..3], w_anode1047w[3..3]), ( w_anode1026w[3..3], w_anode1016w[3..3], w_anode1006w[3..3], w_anode996w[3..3], w_anode986w[3..3], w_anode976w[3..3], w_anode966w[3..3], w_anode949w[3..3]));
	w_anode1006w[] = ( (w_anode1006w[2..2] & w_data934w[2..2]), (w_anode1006w[1..1] & (! w_data934w[1..1])), (w_anode1006w[0..0] & w_data934w[0..0]), w_anode936w[2..2]);
	w_anode1016w[] = ( (w_anode1016w[2..2] & w_data934w[2..2]), (w_anode1016w[1..1] & w_data934w[1..1]), (w_anode1016w[0..0] & (! w_data934w[0..0])), w_anode936w[2..2]);
	w_anode1026w[] = ( (w_anode1026w[2..2] & w_data934w[2..2]), (w_anode1026w[1..1] & w_data934w[1..1]), (w_anode1026w[0..0] & w_data934w[0..0]), w_anode936w[2..2]);
	w_anode1038w[] = ( (w_anode1038w[1..1] & (! data_wire[4..4])), (w_anode1038w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1047w[] = ( (w_anode1047w[2..2] & (! w_data934w[2..2])), (w_anode1047w[1..1] & (! w_data934w[1..1])), (w_anode1047w[0..0] & (! w_data934w[0..0])), w_anode1038w[2..2]);
	w_anode1058w[] = ( (w_anode1058w[2..2] & (! w_data934w[2..2])), (w_anode1058w[1..1] & (! w_data934w[1..1])), (w_anode1058w[0..0] & w_data934w[0..0]), w_anode1038w[2..2]);
	w_anode1068w[] = ( (w_anode1068w[2..2] & (! w_data934w[2..2])), (w_anode1068w[1..1] & w_data934w[1..1]), (w_anode1068w[0..0] & (! w_data934w[0..0])), w_anode1038w[2..2]);
	w_anode1078w[] = ( (w_anode1078w[2..2] & (! w_data934w[2..2])), (w_anode1078w[1..1] & w_data934w[1..1]), (w_anode1078w[0..0] & w_data934w[0..0]), w_anode1038w[2..2]);
	w_anode1088w[] = ( (w_anode1088w[2..2] & w_data934w[2..2]), (w_anode1088w[1..1] & (! w_data934w[1..1])), (w_anode1088w[0..0] & (! w_data934w[0..0])), w_anode1038w[2..2]);
	w_anode1098w[] = ( (w_anode1098w[2..2] & w_data934w[2..2]), (w_anode1098w[1..1] & (! w_data934w[1..1])), (w_anode1098w[0..0] & w_data934w[0..0]), w_anode1038w[2..2]);
	w_anode1108w[] = ( (w_anode1108w[2..2] & w_data934w[2..2]), (w_anode1108w[1..1] & w_data934w[1..1]), (w_anode1108w[0..0] & (! w_data934w[0..0])), w_anode1038w[2..2]);
	w_anode1118w[] = ( (w_anode1118w[2..2] & w_data934w[2..2]), (w_anode1118w[1..1] & w_data934w[1..1]), (w_anode1118w[0..0] & w_data934w[0..0]), w_anode1038w[2..2]);
	w_anode1129w[] = ( (w_anode1129w[1..1] & data_wire[4..4]), (w_anode1129w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1138w[] = ( (w_anode1138w[2..2] & (! w_data934w[2..2])), (w_anode1138w[1..1] & (! w_data934w[1..1])), (w_anode1138w[0..0] & (! w_data934w[0..0])), w_anode1129w[2..2]);
	w_anode1149w[] = ( (w_anode1149w[2..2] & (! w_data934w[2..2])), (w_anode1149w[1..1] & (! w_data934w[1..1])), (w_anode1149w[0..0] & w_data934w[0..0]), w_anode1129w[2..2]);
	w_anode1159w[] = ( (w_anode1159w[2..2] & (! w_data934w[2..2])), (w_anode1159w[1..1] & w_data934w[1..1]), (w_anode1159w[0..0] & (! w_data934w[0..0])), w_anode1129w[2..2]);
	w_anode1169w[] = ( (w_anode1169w[2..2] & (! w_data934w[2..2])), (w_anode1169w[1..1] & w_data934w[1..1]), (w_anode1169w[0..0] & w_data934w[0..0]), w_anode1129w[2..2]);
	w_anode1179w[] = ( (w_anode1179w[2..2] & w_data934w[2..2]), (w_anode1179w[1..1] & (! w_data934w[1..1])), (w_anode1179w[0..0] & (! w_data934w[0..0])), w_anode1129w[2..2]);
	w_anode1189w[] = ( (w_anode1189w[2..2] & w_data934w[2..2]), (w_anode1189w[1..1] & (! w_data934w[1..1])), (w_anode1189w[0..0] & w_data934w[0..0]), w_anode1129w[2..2]);
	w_anode1199w[] = ( (w_anode1199w[2..2] & w_data934w[2..2]), (w_anode1199w[1..1] & w_data934w[1..1]), (w_anode1199w[0..0] & (! w_data934w[0..0])), w_anode1129w[2..2]);
	w_anode1209w[] = ( (w_anode1209w[2..2] & w_data934w[2..2]), (w_anode1209w[1..1] & w_data934w[1..1]), (w_anode1209w[0..0] & w_data934w[0..0]), w_anode1129w[2..2]);
	w_anode1220w[] = ( (w_anode1220w[1..1] & data_wire[4..4]), (w_anode1220w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1229w[] = ( (w_anode1229w[2..2] & (! w_data934w[2..2])), (w_anode1229w[1..1] & (! w_data934w[1..1])), (w_anode1229w[0..0] & (! w_data934w[0..0])), w_anode1220w[2..2]);
	w_anode1240w[] = ( (w_anode1240w[2..2] & (! w_data934w[2..2])), (w_anode1240w[1..1] & (! w_data934w[1..1])), (w_anode1240w[0..0] & w_data934w[0..0]), w_anode1220w[2..2]);
	w_anode1250w[] = ( (w_anode1250w[2..2] & (! w_data934w[2..2])), (w_anode1250w[1..1] & w_data934w[1..1]), (w_anode1250w[0..0] & (! w_data934w[0..0])), w_anode1220w[2..2]);
	w_anode1260w[] = ( (w_anode1260w[2..2] & (! w_data934w[2..2])), (w_anode1260w[1..1] & w_data934w[1..1]), (w_anode1260w[0..0] & w_data934w[0..0]), w_anode1220w[2..2]);
	w_anode1270w[] = ( (w_anode1270w[2..2] & w_data934w[2..2]), (w_anode1270w[1..1] & (! w_data934w[1..1])), (w_anode1270w[0..0] & (! w_data934w[0..0])), w_anode1220w[2..2]);
	w_anode1280w[] = ( (w_anode1280w[2..2] & w_data934w[2..2]), (w_anode1280w[1..1] & (! w_data934w[1..1])), (w_anode1280w[0..0] & w_data934w[0..0]), w_anode1220w[2..2]);
	w_anode1290w[] = ( (w_anode1290w[2..2] & w_data934w[2..2]), (w_anode1290w[1..1] & w_data934w[1..1]), (w_anode1290w[0..0] & (! w_data934w[0..0])), w_anode1220w[2..2]);
	w_anode1300w[] = ( (w_anode1300w[2..2] & w_data934w[2..2]), (w_anode1300w[1..1] & w_data934w[1..1]), (w_anode1300w[0..0] & w_data934w[0..0]), w_anode1220w[2..2]);
	w_anode936w[] = ( (w_anode936w[1..1] & (! data_wire[4..4])), (w_anode936w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode949w[] = ( (w_anode949w[2..2] & (! w_data934w[2..2])), (w_anode949w[1..1] & (! w_data934w[1..1])), (w_anode949w[0..0] & (! w_data934w[0..0])), w_anode936w[2..2]);
	w_anode966w[] = ( (w_anode966w[2..2] & (! w_data934w[2..2])), (w_anode966w[1..1] & (! w_data934w[1..1])), (w_anode966w[0..0] & w_data934w[0..0]), w_anode936w[2..2]);
	w_anode976w[] = ( (w_anode976w[2..2] & (! w_data934w[2..2])), (w_anode976w[1..1] & w_data934w[1..1]), (w_anode976w[0..0] & (! w_data934w[0..0])), w_anode936w[2..2]);
	w_anode986w[] = ( (w_anode986w[2..2] & (! w_data934w[2..2])), (w_anode986w[1..1] & w_data934w[1..1]), (w_anode986w[0..0] & w_data934w[0..0]), w_anode936w[2..2]);
	w_anode996w[] = ( (w_anode996w[2..2] & w_data934w[2..2]), (w_anode996w[1..1] & (! w_data934w[1..1])), (w_anode996w[0..0] & (! w_data934w[0..0])), w_anode936w[2..2]);
	w_data934w[2..0] = data_wire[2..0];
END;
--VALID FILE
