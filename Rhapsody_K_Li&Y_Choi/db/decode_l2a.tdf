--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=23 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_l2a
( 
	data[4..0]	:	input;
	eq[22..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[22..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1314w[2..0]	: WIRE;
	w_anode1328w[3..0]	: WIRE;
	w_anode1345w[3..0]	: WIRE;
	w_anode1355w[3..0]	: WIRE;
	w_anode1365w[3..0]	: WIRE;
	w_anode1375w[3..0]	: WIRE;
	w_anode1385w[3..0]	: WIRE;
	w_anode1395w[3..0]	: WIRE;
	w_anode1405w[3..0]	: WIRE;
	w_anode1417w[2..0]	: WIRE;
	w_anode1427w[3..0]	: WIRE;
	w_anode1438w[3..0]	: WIRE;
	w_anode1448w[3..0]	: WIRE;
	w_anode1458w[3..0]	: WIRE;
	w_anode1468w[3..0]	: WIRE;
	w_anode1478w[3..0]	: WIRE;
	w_anode1488w[3..0]	: WIRE;
	w_anode1498w[3..0]	: WIRE;
	w_anode1509w[2..0]	: WIRE;
	w_anode1519w[3..0]	: WIRE;
	w_anode1530w[3..0]	: WIRE;
	w_anode1540w[3..0]	: WIRE;
	w_anode1550w[3..0]	: WIRE;
	w_anode1560w[3..0]	: WIRE;
	w_anode1570w[3..0]	: WIRE;
	w_anode1580w[3..0]	: WIRE;
	w_anode1590w[3..0]	: WIRE;
	w_anode1601w[2..0]	: WIRE;
	w_anode1611w[3..0]	: WIRE;
	w_anode1622w[3..0]	: WIRE;
	w_anode1632w[3..0]	: WIRE;
	w_anode1642w[3..0]	: WIRE;
	w_anode1652w[3..0]	: WIRE;
	w_anode1662w[3..0]	: WIRE;
	w_anode1672w[3..0]	: WIRE;
	w_anode1682w[3..0]	: WIRE;
	w_data1312w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[22..0] = eq_wire[22..0];
	eq_wire[] = ( ( w_anode1682w[3..3], w_anode1672w[3..3], w_anode1662w[3..3], w_anode1652w[3..3], w_anode1642w[3..3], w_anode1632w[3..3], w_anode1622w[3..3], w_anode1611w[3..3]), ( w_anode1590w[3..3], w_anode1580w[3..3], w_anode1570w[3..3], w_anode1560w[3..3], w_anode1550w[3..3], w_anode1540w[3..3], w_anode1530w[3..3], w_anode1519w[3..3]), ( w_anode1498w[3..3], w_anode1488w[3..3], w_anode1478w[3..3], w_anode1468w[3..3], w_anode1458w[3..3], w_anode1448w[3..3], w_anode1438w[3..3], w_anode1427w[3..3]), ( w_anode1405w[3..3], w_anode1395w[3..3], w_anode1385w[3..3], w_anode1375w[3..3], w_anode1365w[3..3], w_anode1355w[3..3], w_anode1345w[3..3], w_anode1328w[3..3]));
	w_anode1314w[] = ( (w_anode1314w[1..1] & (! data_wire[4..4])), (w_anode1314w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1328w[] = ( (w_anode1328w[2..2] & (! w_data1312w[2..2])), (w_anode1328w[1..1] & (! w_data1312w[1..1])), (w_anode1328w[0..0] & (! w_data1312w[0..0])), w_anode1314w[2..2]);
	w_anode1345w[] = ( (w_anode1345w[2..2] & (! w_data1312w[2..2])), (w_anode1345w[1..1] & (! w_data1312w[1..1])), (w_anode1345w[0..0] & w_data1312w[0..0]), w_anode1314w[2..2]);
	w_anode1355w[] = ( (w_anode1355w[2..2] & (! w_data1312w[2..2])), (w_anode1355w[1..1] & w_data1312w[1..1]), (w_anode1355w[0..0] & (! w_data1312w[0..0])), w_anode1314w[2..2]);
	w_anode1365w[] = ( (w_anode1365w[2..2] & (! w_data1312w[2..2])), (w_anode1365w[1..1] & w_data1312w[1..1]), (w_anode1365w[0..0] & w_data1312w[0..0]), w_anode1314w[2..2]);
	w_anode1375w[] = ( (w_anode1375w[2..2] & w_data1312w[2..2]), (w_anode1375w[1..1] & (! w_data1312w[1..1])), (w_anode1375w[0..0] & (! w_data1312w[0..0])), w_anode1314w[2..2]);
	w_anode1385w[] = ( (w_anode1385w[2..2] & w_data1312w[2..2]), (w_anode1385w[1..1] & (! w_data1312w[1..1])), (w_anode1385w[0..0] & w_data1312w[0..0]), w_anode1314w[2..2]);
	w_anode1395w[] = ( (w_anode1395w[2..2] & w_data1312w[2..2]), (w_anode1395w[1..1] & w_data1312w[1..1]), (w_anode1395w[0..0] & (! w_data1312w[0..0])), w_anode1314w[2..2]);
	w_anode1405w[] = ( (w_anode1405w[2..2] & w_data1312w[2..2]), (w_anode1405w[1..1] & w_data1312w[1..1]), (w_anode1405w[0..0] & w_data1312w[0..0]), w_anode1314w[2..2]);
	w_anode1417w[] = ( (w_anode1417w[1..1] & (! data_wire[4..4])), (w_anode1417w[0..0] & data_wire[3..3]), B"1");
	w_anode1427w[] = ( (w_anode1427w[2..2] & (! w_data1312w[2..2])), (w_anode1427w[1..1] & (! w_data1312w[1..1])), (w_anode1427w[0..0] & (! w_data1312w[0..0])), w_anode1417w[2..2]);
	w_anode1438w[] = ( (w_anode1438w[2..2] & (! w_data1312w[2..2])), (w_anode1438w[1..1] & (! w_data1312w[1..1])), (w_anode1438w[0..0] & w_data1312w[0..0]), w_anode1417w[2..2]);
	w_anode1448w[] = ( (w_anode1448w[2..2] & (! w_data1312w[2..2])), (w_anode1448w[1..1] & w_data1312w[1..1]), (w_anode1448w[0..0] & (! w_data1312w[0..0])), w_anode1417w[2..2]);
	w_anode1458w[] = ( (w_anode1458w[2..2] & (! w_data1312w[2..2])), (w_anode1458w[1..1] & w_data1312w[1..1]), (w_anode1458w[0..0] & w_data1312w[0..0]), w_anode1417w[2..2]);
	w_anode1468w[] = ( (w_anode1468w[2..2] & w_data1312w[2..2]), (w_anode1468w[1..1] & (! w_data1312w[1..1])), (w_anode1468w[0..0] & (! w_data1312w[0..0])), w_anode1417w[2..2]);
	w_anode1478w[] = ( (w_anode1478w[2..2] & w_data1312w[2..2]), (w_anode1478w[1..1] & (! w_data1312w[1..1])), (w_anode1478w[0..0] & w_data1312w[0..0]), w_anode1417w[2..2]);
	w_anode1488w[] = ( (w_anode1488w[2..2] & w_data1312w[2..2]), (w_anode1488w[1..1] & w_data1312w[1..1]), (w_anode1488w[0..0] & (! w_data1312w[0..0])), w_anode1417w[2..2]);
	w_anode1498w[] = ( (w_anode1498w[2..2] & w_data1312w[2..2]), (w_anode1498w[1..1] & w_data1312w[1..1]), (w_anode1498w[0..0] & w_data1312w[0..0]), w_anode1417w[2..2]);
	w_anode1509w[] = ( (w_anode1509w[1..1] & data_wire[4..4]), (w_anode1509w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1519w[] = ( (w_anode1519w[2..2] & (! w_data1312w[2..2])), (w_anode1519w[1..1] & (! w_data1312w[1..1])), (w_anode1519w[0..0] & (! w_data1312w[0..0])), w_anode1509w[2..2]);
	w_anode1530w[] = ( (w_anode1530w[2..2] & (! w_data1312w[2..2])), (w_anode1530w[1..1] & (! w_data1312w[1..1])), (w_anode1530w[0..0] & w_data1312w[0..0]), w_anode1509w[2..2]);
	w_anode1540w[] = ( (w_anode1540w[2..2] & (! w_data1312w[2..2])), (w_anode1540w[1..1] & w_data1312w[1..1]), (w_anode1540w[0..0] & (! w_data1312w[0..0])), w_anode1509w[2..2]);
	w_anode1550w[] = ( (w_anode1550w[2..2] & (! w_data1312w[2..2])), (w_anode1550w[1..1] & w_data1312w[1..1]), (w_anode1550w[0..0] & w_data1312w[0..0]), w_anode1509w[2..2]);
	w_anode1560w[] = ( (w_anode1560w[2..2] & w_data1312w[2..2]), (w_anode1560w[1..1] & (! w_data1312w[1..1])), (w_anode1560w[0..0] & (! w_data1312w[0..0])), w_anode1509w[2..2]);
	w_anode1570w[] = ( (w_anode1570w[2..2] & w_data1312w[2..2]), (w_anode1570w[1..1] & (! w_data1312w[1..1])), (w_anode1570w[0..0] & w_data1312w[0..0]), w_anode1509w[2..2]);
	w_anode1580w[] = ( (w_anode1580w[2..2] & w_data1312w[2..2]), (w_anode1580w[1..1] & w_data1312w[1..1]), (w_anode1580w[0..0] & (! w_data1312w[0..0])), w_anode1509w[2..2]);
	w_anode1590w[] = ( (w_anode1590w[2..2] & w_data1312w[2..2]), (w_anode1590w[1..1] & w_data1312w[1..1]), (w_anode1590w[0..0] & w_data1312w[0..0]), w_anode1509w[2..2]);
	w_anode1601w[] = ( (w_anode1601w[1..1] & data_wire[4..4]), (w_anode1601w[0..0] & data_wire[3..3]), B"1");
	w_anode1611w[] = ( (w_anode1611w[2..2] & (! w_data1312w[2..2])), (w_anode1611w[1..1] & (! w_data1312w[1..1])), (w_anode1611w[0..0] & (! w_data1312w[0..0])), w_anode1601w[2..2]);
	w_anode1622w[] = ( (w_anode1622w[2..2] & (! w_data1312w[2..2])), (w_anode1622w[1..1] & (! w_data1312w[1..1])), (w_anode1622w[0..0] & w_data1312w[0..0]), w_anode1601w[2..2]);
	w_anode1632w[] = ( (w_anode1632w[2..2] & (! w_data1312w[2..2])), (w_anode1632w[1..1] & w_data1312w[1..1]), (w_anode1632w[0..0] & (! w_data1312w[0..0])), w_anode1601w[2..2]);
	w_anode1642w[] = ( (w_anode1642w[2..2] & (! w_data1312w[2..2])), (w_anode1642w[1..1] & w_data1312w[1..1]), (w_anode1642w[0..0] & w_data1312w[0..0]), w_anode1601w[2..2]);
	w_anode1652w[] = ( (w_anode1652w[2..2] & w_data1312w[2..2]), (w_anode1652w[1..1] & (! w_data1312w[1..1])), (w_anode1652w[0..0] & (! w_data1312w[0..0])), w_anode1601w[2..2]);
	w_anode1662w[] = ( (w_anode1662w[2..2] & w_data1312w[2..2]), (w_anode1662w[1..1] & (! w_data1312w[1..1])), (w_anode1662w[0..0] & w_data1312w[0..0]), w_anode1601w[2..2]);
	w_anode1672w[] = ( (w_anode1672w[2..2] & w_data1312w[2..2]), (w_anode1672w[1..1] & w_data1312w[1..1]), (w_anode1672w[0..0] & (! w_data1312w[0..0])), w_anode1601w[2..2]);
	w_anode1682w[] = ( (w_anode1682w[2..2] & w_data1312w[2..2]), (w_anode1682w[1..1] & w_data1312w[1..1]), (w_anode1682w[0..0] & w_data1312w[0..0]), w_anode1601w[2..2]);
	w_data1312w[2..0] = data_wire[2..0];
END;
--VALID FILE
